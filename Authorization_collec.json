{
	"info": {
		"_postman_id": "0fc3d832-6605-4a68-bc70-f7a09745d5d7",
		"name": "Authorization API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27210945",
		"_collection_link": "https://bold-firefly-827772.postman.co/workspace/ASK-081523~4c6ce3fc-5c5f-4271-be13-660ff4ea0bbd/collection/27210945-0fc3d832-6605-4a68-bc70-f7a09745d5d7?action=share&creator=27210945&source=collection_link"
	},
	"item": [
		{
			"name": "Create new student/sign-up",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"student04@gmail.com\",\n    \"name\": \"student04\",\n    \"password\": \"student\",\n    \"group\":\"ABC\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{stageUrl}}/sign-up",
					"host": [
						"{{stageUrl}}"
					],
					"path": [
						"sign-up"
					]
				}
			},
			"response": []
		},
		{
			"name": "user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"Auth_studentId\", jsonData[0].id);",
							"pm.environment.set(\"Auth_activationCode\", jsonData[0].activationCode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users?_where=(email,eq,student04@gmail.com)",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "_where",
							"value": "(email,eq,student04@gmail.com)"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "activate user account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"User was activated\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{stageUrl}}/activate/{{Auth_studentId}}/{{Auth_activationCode}}",
					"host": [
						"{{stageUrl}}"
					],
					"path": [
						"activate",
						"{{Auth_studentId}}",
						"{{Auth_activationCode}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "sign-in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData=pm.response.json();",
							"pm.environment.set(\"AuthorizationToken\",jsonData.token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"student04@gmail.com\",\n  \"password\": \"student\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{stageUrl}}/sign-in",
					"host": [
						"{{stageUrl}}"
					],
					"path": [
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "forgot-password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AuthorizationToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"student04@gmail.com\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{stageUrl}}/forgot-password/",
					"host": [
						"{{stageUrl}}"
					],
					"path": [
						"forgot-password",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User data-Activation code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"Auth_studentId\",jsonData[0].id);",
							"pm.environment.set(\"Auth_activationCode\",jsonData[0].activationCode);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users?_where=(email,eq,student04@gmail.com)",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "_where",
							"value": "(email,eq,student04@gmail.com)"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reset-password",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AuthorizationToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"password\": \"12345Abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{stageUrl}}/reset-password/{{Auth_studentId}}/{{Auth_activationCode}}",
					"host": [
						"{{stageUrl}}"
					],
					"path": [
						"reset-password",
						"{{Auth_studentId}}",
						"{{Auth_activationCode}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "sign-in(teacher)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"teacherToken\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"teacher@gmail.com\",\n  \"password\": \"12345Abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{stageUrl}}/sign-in",
					"host": [
						"{{stageUrl}}"
					],
					"path": [
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{teacherToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{stageUrl}}/users/{{Auth_studentId}}",
					"host": [
						"{{stageUrl}}"
					],
					"path": [
						"users",
						"{{Auth_studentId}}"
					]
				}
			},
			"response": []
		}
	]
}